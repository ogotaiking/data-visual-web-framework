{"version":3,"sources":["webpack:////js/evpn.js","webpack:///./client/comp/evpn.js","webpack:///delegated ./node_modules/antd/lib/table/index.js from dll-reference vendor","webpack:///delegated ./node_modules/antd/lib/table/style/index.js from dll-reference vendor","webpack:///./client/comp/thincpe/cpestats.js","webpack:///./client/comp/thincpe/hubbd.js","webpack:///./client/comp/thincpe/hubvpn.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_cpestats","_cpestats2","_hubvpn","_hubvpn2","_hubbd","_hubbd2","_navbar","_navbar2","render","createElement","document","getElementById","selectkey","_table","_table2","socket","io","connect","columns","title","dataIndex","key","CpeWirelessClientTable","createClass","displayName","getInitialState","data","componentDidMount","emit","on","this","_updateClientList","topic","message","mq_client_key","dataSource","type","msg","JSON","parse","payload","i","length","client_info","a","gateway","id","mac","intf","inactive_time","rx_bytes","toString","rx_pkts","tx_bytes","tx_pkts","signal","tx_rate","rx_rate","authorization","authentication","push","setState","state","HUBBDClientTable","bid","agtime","HUBVPNClientTable","interfaces","username","group","assignip","uptime","status","peeripport"],"mappings":"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","file":"/js/evpn.js","sourcesContent":["webpackJsonp([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _cpestats = __webpack_require__(7);\n\t\n\tvar _cpestats2 = _interopRequireDefault(_cpestats);\n\t\n\tvar _hubvpn = __webpack_require__(12);\n\t\n\tvar _hubvpn2 = _interopRequireDefault(_hubvpn);\n\t\n\tvar _hubbd = __webpack_require__(11);\n\t\n\tvar _hubbd2 = _interopRequireDefault(_hubbd);\n\t\n\tvar _navbar = __webpack_require__(8);\n\t\n\tvar _navbar2 = _interopRequireDefault(_navbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/* demo */\n\t(0, _reactDom.render)(_react2.default.createElement(_cpestats2.default, null), document.getElementById('CpeWirelessClientTable'));\n\t\n\t(0, _reactDom.render)(_react2.default.createElement(_hubvpn2.default, null), document.getElementById('HUBVPNClientTable'));\n\t\n\t(0, _reactDom.render)(_react2.default.createElement(_hubbd2.default, null), document.getElementById('HUBBDClientTable'));\n\t\n\t(0, _reactDom.render)(_react2.default.createElement(_navbar2.default, { selectkey: '4' }), document.getElementById('navbar'));\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (__webpack_require__(1))(526);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = (__webpack_require__(1))(527);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _table = __webpack_require__(5);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\t__webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\tvar antd = require('antd');\n\tvar Table = antd.Table;\n\timport 'antd/dist/antd.css';\n\t*/\n\t\n\tvar socket = io.connect();\n\t\n\tvar columns = [{\n\t    title: 'CPE',\n\t    dataIndex: 'gateway',\n\t    key: 'gateway'\n\t}, {\n\t    title: 'MAC',\n\t    dataIndex: 'mac',\n\t    key: 'mac'\n\t}, {\n\t    title: 'Interface',\n\t    dataIndex: 'intf',\n\t    key: 'intf'\n\t}, {\n\t    title: 'Signal',\n\t    dataIndex: 'signal',\n\t    key: 'signal'\n\t}, {\n\t    title: 'RX Rate',\n\t    dataIndex: 'rx_rate',\n\t    key: 'rx_rate'\n\t}, {\n\t    title: 'TX Rate',\n\t    dataIndex: 'tx_rate',\n\t    key: 'tx_rate'\n\t}, {\n\t\n\t    title: 'Autentication',\n\t    dataIndex: 'authentication',\n\t    key: 'authentication'\n\t}, {\n\t    title: 'Authorization',\n\t    dataIndex: 'authorization',\n\t    key: 'authorization'\n\t}, {\n\t    title: 'RX Bytes',\n\t    dataIndex: 'rx_bytes',\n\t    key: 'rx_bytes'\n\t}, {\n\t    title: 'RX pkts',\n\t    dataIndex: 'rx_pkts',\n\t    key: 'rx_pkts'\n\t}, {\n\t    title: 'TX Bytes',\n\t    dataIndex: 'tx_bytes',\n\t    key: 'tx_bytes'\n\t}, {\n\t    title: 'TX pkts',\n\t    dataIndex: 'tx_pkts',\n\t    key: 'tx_pkts'\n\t}, {\n\t    title: 'inactive time',\n\t    dataIndex: 'inactive_time',\n\t    key: 'inactive_time'\n\t}];\n\t\n\tvar CpeWirelessClientTable = _react2.default.createClass({\n\t    displayName: 'CpeWirelessClientTable',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { data: [] };\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        socket.emit('subscribe', 'stats');\n\t        socket.on('message', this._updateClientList);\n\t    },\n\t    _updateClientList: function _updateClientList(topic, message) {\n\t        var mq_client_key = 1;\n\t        var dataSource = [];\n\t        if (message.type == 'stats') {\n\t            var msg = JSON.parse(message.payload);\n\t\n\t            //console.log(msg);\n\t\n\t            for (var i = 0; i < msg.length; i++) {\n\t                var client_info = msg[i];\n\t                var a = {};\n\t                a.gateway = message.id;\n\t                a.mac = client_info[0];\n\t                a.intf = client_info[1];\n\t                a.inactive_time = client_info[2];\n\t                a.rx_bytes = (client_info[3] / 1000).toString() + ' KB';\n\t                a.rx_pkts = client_info[4];\n\t                a.tx_bytes = (client_info[5] / 1000).toString() + ' KB';\n\t                a.tx_pkts = client_info[6];\n\t                a.signal = client_info[7].toString() + ' dBm';\n\t                a.tx_rate = client_info[8].toString() + ' Mbps';\n\t                a.rx_rate = client_info[9].toString() + ' Mbps';\n\t                a.authorization = client_info[10];\n\t                a.authentication = client_info[11];\n\t\n\t                mq_client_key = mq_client_key + 1;\n\t                dataSource.push(a);\n\t            }\n\t            //console.log(dataSource);\n\t            this.setState({ data: dataSource });\n\t        }\n\t    },\n\t\n\t\n\t    render: function render() {\n\t        return _react2.default.createElement(_table2.default, { dataSource: this.state.data, columns: columns });\n\t    }\n\t});\n\t\n\tmodule.exports = CpeWirelessClientTable;\n\n/***/ },\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _table = __webpack_require__(5);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\t__webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\tvar antd = require('antd');\n\tvar Table = antd.Table;\n\timport 'antd/dist/antd.css';\n\t*/\n\t\n\tvar socket = io.connect();\n\t\n\tvar columns = [{\n\t    title: 'Bridge-Domain',\n\t    dataIndex: 'bid',\n\t    key: 'bid'\n\t}, {\n\t    title: 'MAC',\n\t    dataIndex: 'mac',\n\t    key: 'mac'\n\t}, {\n\t    title: 'Aging Time',\n\t    dataIndex: 'agtime',\n\t    key: 'agtime'\n\t}, {\n\t    title: 'Interface',\n\t    dataIndex: 'intf',\n\t    key: 'intf'\n\t}];\n\t\n\tvar HUBBDClientTable = _react2.default.createClass({\n\t    displayName: 'HUBBDClientTable',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { data: [] };\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        socket.emit('subscribe', 'HUB_BD');\n\t        socket.on('message', this._updateClientList);\n\t    },\n\t    _updateClientList: function _updateClientList(topic, message) {\n\t        var mq_client_key = 1;\n\t        var dataSource = [];\n\t\n\t        for (var i = 0; i < message.length; i++) {\n\t            var client_info = message[i];\n\t            var a = {};\n\t            a.bid = client_info[0];\n\t            a.mac = client_info[1];\n\t            a.agtime = client_info[2];\n\t            a.intf = client_info[3];\n\t            a.key = mq_client_key;\n\t            mq_client_key = mq_client_key + 1;\n\t            dataSource.push(a);\n\t        }\n\t        //console.log(dataSource);\n\t        this.setState({ data: dataSource });\n\t    },\n\t\n\t\n\t    render: function render() {\n\t        return _react2.default.createElement(_table2.default, { dataSource: this.state.data, columns: columns });\n\t    }\n\t});\n\t\n\tmodule.exports = HUBBDClientTable;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\t__webpack_require__(4);\n\t\n\tvar _table = __webpack_require__(5);\n\t\n\tvar _table2 = _interopRequireDefault(_table);\n\t\n\t__webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/*\n\tvar antd = require('antd');\n\tvar Table = antd.Table;\n\timport 'antd/dist/antd.css';\n\t*/\n\t\n\tvar socket = io.connect();\n\t\n\tvar columns = [{\n\t    title: 'Interface',\n\t    dataIndex: 'interfaces',\n\t    key: 'interfaces'\n\t}, {\n\t    title: 'Username',\n\t    dataIndex: 'username',\n\t    key: 'username'\n\t}, {\n\t    title: 'Group',\n\t    dataIndex: 'group',\n\t    key: 'group'\n\t}, {\n\t    title: 'Tunnel IP',\n\t    dataIndex: 'assignip',\n\t    key: 'assignip'\n\t}, {\n\t    title: 'Uptime',\n\t    dataIndex: 'uptime',\n\t    key: 'uptime'\n\t}, {\n\t    title: 'Status',\n\t    dataIndex: 'status',\n\t    key: 'status'\n\t}, {\n\t    title: 'Client Address',\n\t    dataIndex: 'peeripport',\n\t    key: 'peeripport'\n\t}];\n\t\n\tvar HUBVPNClientTable = _react2.default.createClass({\n\t    displayName: 'HUBVPNClientTable',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { data: [] };\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        socket.emit('subscribe', 'HUB_VPN');\n\t        socket.on('message', this._updateClientList);\n\t    },\n\t    _updateClientList: function _updateClientList(topic, message) {\n\t        var mq_client_key = 1;\n\t        var dataSource = [];\n\t\n\t        for (var i = 0; i < message.length; i++) {\n\t            var client_info = message[i];\n\t            var a = {};\n\t            a.interfaces = client_info[0];\n\t            a.username = client_info[1];\n\t            a.group = client_info[3];\n\t            a.assignip = client_info[4];\n\t            a.uptime = client_info[5];\n\t            a.status = client_info[6];\n\t            a.peeripport = client_info[7].toString() + '/' + client_info[8].toString();\n\t            a.key = mq_client_key;\n\t            mq_client_key = mq_client_key + 1;\n\t            dataSource.push(a);\n\t        }\n\t        //console.log(dataSource);\n\t        this.setState({ data: dataSource });\n\t    },\n\t\n\t\n\t    render: function render() {\n\t        return _react2.default.createElement(_table2.default, { dataSource: this.state.data, columns: columns });\n\t    }\n\t});\n\t\n\tmodule.exports = HUBVPNClientTable;\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// /js/evpn.js","/* demo */\nimport React, {Component} from 'react';\nimport { render } from 'react-dom';\nimport 'babel-polyfill';\n\n\n\nimport CpeWirelessClientTable from './thincpe/cpestats';\nrender (\n    <CpeWirelessClientTable />,\n    document.getElementById('CpeWirelessClientTable')\n);\n\nimport HUBVPNClientTable from './thincpe/hubvpn';\nrender (\n    <HUBVPNClientTable />,\n    document.getElementById('HUBVPNClientTable')\n);\n\nimport HUBBDClientTable from './thincpe/hubbd';\nrender (\n    <HUBBDClientTable />,\n    document.getElementById('HUBBDClientTable')\n);\n\nimport NavBarComp from './navbar'\nrender (\n   <NavBarComp selectkey=\"4\" />,\n   document.getElementById('navbar')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./client/comp/evpn.js","module.exports = (__webpack_require__(1))(526);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/antd/lib/table/index.js from dll-reference vendor\n// module id = 5\n// module chunks = 1 3 4","module.exports = (__webpack_require__(1))(527);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/antd/lib/table/style/index.js from dll-reference vendor\n// module id = 6\n// module chunks = 1 3 4","import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport 'babel-polyfill';\n/*\nvar antd = require('antd');\nvar Table = antd.Table;\nimport 'antd/dist/antd.css';\n*/\n\nimport Table from 'antd/lib/table';\nimport 'antd/lib/table/style';\n\n\n\nvar socket = io.connect();\n\nconst columns = [\n    {\n        title: 'CPE',\n        dataIndex: 'gateway',\n        key: 'gateway'\n    }, {\n        title: 'MAC',\n        dataIndex: 'mac',\n        key: 'mac'\n    }, {\n        title: 'Interface',\n        dataIndex: 'intf',\n        key: 'intf'\n    }, {\n        title: 'Signal',\n        dataIndex: 'signal',\n        key: 'signal'\n    }, {\n        title: 'RX Rate',\n        dataIndex: 'rx_rate',\n        key: 'rx_rate'\n    }, {\n        title: 'TX Rate',\n        dataIndex: 'tx_rate',\n        key: 'tx_rate'\n    }, {\n\n        title: 'Autentication',\n        dataIndex: 'authentication',\n        key: 'authentication'\n    }, {\n        title: 'Authorization',\n        dataIndex: 'authorization',\n        key: 'authorization'\n    }, {\n        title: 'RX Bytes',\n        dataIndex: 'rx_bytes',\n        key: 'rx_bytes'\n    }, {\n        title: 'RX pkts',\n        dataIndex: 'rx_pkts',\n        key: 'rx_pkts'\n    }, {\n        title: 'TX Bytes',\n        dataIndex: 'tx_bytes',\n        key: 'tx_bytes'\n    }, {\n        title: 'TX pkts',\n        dataIndex: 'tx_pkts',\n        key: 'tx_pkts'\n    }, {\n        title: 'inactive time',\n        dataIndex: 'inactive_time',\n        key: 'inactive_time'\n    }\n];\n\nvar CpeWirelessClientTable = React.createClass({\n    getInitialState: function() {\n        return {data: []};\n    },\n    componentDidMount: function() {\n        socket.emit('subscribe', 'stats');\n        socket.on('message', this._updateClientList);\n    },\n    _updateClientList(topic, message) {\n        var mq_client_key = 1;\n        var dataSource = [];\n        if (message.type == 'stats') {\n            var msg = JSON.parse(message.payload);\n\n            //console.log(msg);\n\n            for (var i = 0; i < msg.length; i++) {\n                var client_info = msg[i];\n                var a = {};\n                a.gateway = message.id;\n                a.mac = client_info[0];\n                a.intf = client_info[1];\n                a.inactive_time = client_info[2];\n                a.rx_bytes = (client_info[3] / 1000).toString() + ' KB';\n                a.rx_pkts = client_info[4];\n                a.tx_bytes = (client_info[5] / 1000).toString() + ' KB';\n                a.tx_pkts = client_info[6];\n                a.signal = client_info[7].toString() + ' dBm';\n                a.tx_rate = client_info[8].toString() + ' Mbps';\n                a.rx_rate = client_info[9].toString() + ' Mbps';\n                a.authorization = client_info[10];\n                a.authentication = client_info[11];\n\n                mq_client_key = mq_client_key + 1;\n                dataSource.push(a);\n\n            }\n            //console.log(dataSource);\n            this.setState({data: dataSource});\n        }\n    },\n\n    render: function() {\n        return (<Table dataSource={this.state.data} columns={columns}/>);\n    }\n});\n\nmodule.exports = CpeWirelessClientTable;\n\n\n\n// WEBPACK FOOTER //\n// ./client/comp/thincpe/cpestats.js","import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport 'babel-polyfill';\n/*\nvar antd = require('antd');\nvar Table = antd.Table;\nimport 'antd/dist/antd.css';\n*/\n\nimport Table from 'antd/lib/table';\nimport 'antd/lib/table/style';\n\n\nvar socket = io.connect();\n\nconst columns = [\n    {\n        title: 'Bridge-Domain',\n        dataIndex: 'bid',\n        key: 'bid'\n    }, {\n        title: 'MAC',\n        dataIndex: 'mac',\n        key: 'mac'\n    }, {\n        title: 'Aging Time',\n        dataIndex: 'agtime',\n        key: 'agtime'\n    }, {\n        title: 'Interface',\n        dataIndex: 'intf',\n        key: 'intf'\n      }\n];\n\nvar HUBBDClientTable = React.createClass({\n    getInitialState: function() {\n        return {data: []};\n    },\n    componentDidMount: function() {\n        socket.emit('subscribe', 'HUB_BD');\n        socket.on('message', this._updateClientList);\n    },\n    _updateClientList(topic, message) {\n        var mq_client_key = 1;\n        var dataSource = [];\n\n        for (var i = 0; i < message.length; i++) {\n            var client_info = message[i];\n            var a = {};\n            a.bid = client_info[0];\n            a.mac = client_info[1];\n            a.agtime = client_info[2];\n            a.intf = client_info[3];\n            a.key = mq_client_key;\n            mq_client_key = mq_client_key + 1;\n            dataSource.push(a);\n        }\n        //console.log(dataSource);\n        this.setState({data: dataSource});\n    },\n\n    render: function() {\n        return (<Table dataSource={this.state.data} columns={columns}/>);\n    }\n});\n\nmodule.exports = HUBBDClientTable;\n\n\n\n// WEBPACK FOOTER //\n// ./client/comp/thincpe/hubbd.js","import React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport 'babel-polyfill';\n/*\nvar antd = require('antd');\nvar Table = antd.Table;\nimport 'antd/dist/antd.css';\n*/\n\nimport Table from 'antd/lib/table';\nimport 'antd/lib/table/style';\n\nvar socket = io.connect();\n\nconst columns = [\n    {\n        title: 'Interface',\n        dataIndex: 'interfaces',\n        key: 'interfaces'\n    }, {\n        title: 'Username',\n        dataIndex: 'username',\n        key: 'username'\n    }, {\n        title: 'Group',\n        dataIndex: 'group',\n        key: 'group'\n    }, {\n        title: 'Tunnel IP',\n        dataIndex: 'assignip',\n        key: 'assignip'\n    }, {\n        title: 'Uptime',\n        dataIndex: 'uptime',\n        key: 'uptime'\n    }, {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status'\n    }, {\n        title: 'Client Address',\n        dataIndex: 'peeripport',\n        key: 'peeripport'\n    }\n];\n\nvar HUBVPNClientTable = React.createClass({\n    getInitialState: function() {\n        return {data: []};\n    },\n    componentDidMount: function() {\n        socket.emit('subscribe', 'HUB_VPN');\n        socket.on('message', this._updateClientList);\n    },\n    _updateClientList(topic, message) {\n        var mq_client_key = 1;\n        var dataSource = [];\n\n        for (var i = 0; i < message.length; i++) {\n            var client_info = message[i];\n            var a = {};\n            a.interfaces = client_info[0];\n            a.username = client_info[1];\n            a.group = client_info[3];\n            a.assignip = client_info[4];\n            a.uptime = client_info[5];\n            a.status = client_info[6];\n            a.peeripport = client_info[7].toString() + '/' + client_info[8].toString();\n            a.key = mq_client_key;\n            mq_client_key = mq_client_key + 1;\n            dataSource.push(a);\n        }\n        //console.log(dataSource);\n        this.setState({data: dataSource});\n    },\n\n    render: function() {\n        return (<Table dataSource={this.state.data} columns={columns}/>);\n    }\n});\n\nmodule.exports = HUBVPNClientTable;\n\n\n\n// WEBPACK FOOTER //\n// ./client/comp/thincpe/hubvpn.js"],"sourceRoot":""}